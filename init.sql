
DROP TABLE IF EXISTS cells;
DROP TABLE IF EXISTS rows;
DROP TABLE IF EXISTS columns;
DROP TABLE IF EXISTS spreadsheets;
DROP TABLE IF EXISTS workspace_tools;
DROP TABLE IF EXISTS workspaces;
DROP TABLE IF EXISTS items;

CREATE TABLE IF NOT EXISTS items (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS workspaces (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER,
    name TEXT,
    description TEXT,
    owner TEXT,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS workspace_tools (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    workspace_id INTEGER REFERENCES workspaces(id) ON DELETE CASCADE,
    name TEXT NOT NULL,
    description TEXT,
    type TEXT,
    owner TEXT,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS spreadsheets (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER,
    owner TEXT,
    name TEXT,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS columns (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    spreadsheets_id INTEGER REFERENCES spreadsheets(id),
    name TEXT,
    type TEXT,
    description TEXT,
    "order" INTEGER,
    visible BOOLEAN,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS rows (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    spreadsheets_id INTEGER REFERENCES spreadsheets(id),
    name TEXT,
    description TEXT,
    "order" INTEGER,
    visible BOOLEAN,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS cells (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    spreadsheets_id INTEGER REFERENCES spreadsheets(id),
    columns_id INTEGER REFERENCES columns(id),
    rows_id INTEGER REFERENCES rows(id),
    value TEXT,
    type TEXT,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- Update functions for "updated_at" column
-- Trigger function for updated_at column
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Trigger function for workspaces table updated_at column
CREATE TRIGGER update_workspaces_updated_at
BEFORE UPDATE ON workspaces
FOR EACH ROW
EXECUTE PROCEDURE update_updated_at_column();

-- Granting Priviledges to users (forgehelm_users)
GRANT ALL PRIVILEGES ON TABLE items TO forgehelm_user;
GRANT ALL PRIVILEGES ON SEQUENCE items_id_seq TO forgehelm_user;

GRANT ALL PRIVILEGES ON TABLE workspaces TO forgehelm_user;
GRANT ALL PRIVILEGES ON SEQUENCE workspaces_id_seq TO forgehelm_user;